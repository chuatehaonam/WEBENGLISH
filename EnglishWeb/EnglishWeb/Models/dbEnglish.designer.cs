#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnglishWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EnglishLearningDB")]
	public partial class dbEnglishDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertLesson(Lesson instance);
    partial void UpdateLesson(Lesson instance);
    partial void DeleteLesson(Lesson instance);
    partial void InsertLessonType(LessonType instance);
    partial void UpdateLessonType(LessonType instance);
    partial void DeleteLessonType(LessonType instance);
    partial void InsertUserLessonProgress(UserLessonProgress instance);
    partial void UpdateUserLessonProgress(UserLessonProgress instance);
    partial void DeleteUserLessonProgress(UserLessonProgress instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserVocabularyHistory(UserVocabularyHistory instance);
    partial void UpdateUserVocabularyHistory(UserVocabularyHistory instance);
    partial void DeleteUserVocabularyHistory(UserVocabularyHistory instance);
    partial void InsertVideo(Video instance);
    partial void UpdateVideo(Video instance);
    partial void DeleteVideo(Video instance);
    partial void InsertVocabulary(Vocabulary instance);
    partial void UpdateVocabulary(Vocabulary instance);
    partial void DeleteVocabulary(Vocabulary instance);
        #endregion
        public dbEnglishDataContext() :
      base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EnglishLearningDBConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public dbEnglishDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbEnglishDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbEnglishDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbEnglishDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<Lesson> Lessons
		{
			get
			{
				return this.GetTable<Lesson>();
			}
		}
		
		public System.Data.Linq.Table<LessonType> LessonTypes
		{
			get
			{
				return this.GetTable<LessonType>();
			}
		}
		
		public System.Data.Linq.Table<UserLessonProgress> UserLessonProgresses
		{
			get
			{
				return this.GetTable<UserLessonProgress>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserVocabularyHistory> UserVocabularyHistories
		{
			get
			{
				return this.GetTable<UserVocabularyHistory>();
			}
		}
		
		public System.Data.Linq.Table<Video> Videos
		{
			get
			{
				return this.GetTable<Video>();
			}
		}
		
		public System.Data.Linq.Table<Vocabulary> Vocabularies
		{
			get
			{
				return this.GetTable<Vocabulary>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Images")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageId;
		
		private string _FileName;
		
		private string _FilePath;
		
		private System.DateTime _UploadDate;
		
		private int _UserId;
		
		private System.Nullable<int> _LessonId;
		
		private System.Nullable<int> _WordId;
		
		private EntityRef<Lesson> _Lesson;
		
		private EntityRef<User> _User;
		
		private EntityRef<Vocabulary> _Vocabulary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIdChanging(int value);
    partial void OnImageIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnUploadDateChanging(System.DateTime value);
    partial void OnUploadDateChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLessonIdChanging(System.Nullable<int> value);
    partial void OnLessonIdChanged();
    partial void OnWordIdChanging(System.Nullable<int> value);
    partial void OnWordIdChanged();
    #endregion
		
		public Image()
		{
			this._Lesson = default(EntityRef<Lesson>);
			this._User = default(EntityRef<User>);
			this._Vocabulary = default(EntityRef<Vocabulary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this.OnImageIdChanging(value);
					this.SendPropertyChanging();
					this._ImageId = value;
					this.SendPropertyChanged("ImageId");
					this.OnImageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonId", DbType="Int")]
		public System.Nullable<int> LessonId
		{
			get
			{
				return this._LessonId;
			}
			set
			{
				if ((this._LessonId != value))
				{
					if (this._Lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLessonIdChanging(value);
					this.SendPropertyChanging();
					this._LessonId = value;
					this.SendPropertyChanged("LessonId");
					this.OnLessonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordId", DbType="Int")]
		public System.Nullable<int> WordId
		{
			get
			{
				return this._WordId;
			}
			set
			{
				if ((this._WordId != value))
				{
					if (this._Vocabulary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWordIdChanging(value);
					this.SendPropertyChanging();
					this._WordId = value;
					this.SendPropertyChanged("WordId");
					this.OnWordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Image", Storage="_Lesson", ThisKey="LessonId", OtherKey="LessonId", IsForeignKey=true)]
		public Lesson Lesson
		{
			get
			{
				return this._Lesson.Entity;
			}
			set
			{
				Lesson previousValue = this._Lesson.Entity;
				if (((previousValue != value) 
							|| (this._Lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lesson.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Lesson.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._LessonId = value.LessonId;
					}
					else
					{
						this._LessonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lesson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Image", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vocabulary_Image", Storage="_Vocabulary", ThisKey="WordId", OtherKey="WordId", IsForeignKey=true)]
		public Vocabulary Vocabulary
		{
			get
			{
				return this._Vocabulary.Entity;
			}
			set
			{
				Vocabulary previousValue = this._Vocabulary.Entity;
				if (((previousValue != value) 
							|| (this._Vocabulary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vocabulary.Entity = null;
						previousValue.Images.Remove(this);
					}
					this._Vocabulary.Entity = value;
					if ((value != null))
					{
						value.Images.Add(this);
						this._WordId = value.WordId;
					}
					else
					{
						this._WordId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vocabulary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lesson")]
	public partial class Lesson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LessonId;
		
		private string _Title;
		
		private string _Description;
		
		private int _TypeId;
		
		private System.DateTime _CreateDate;
		
		private EntitySet<Image> _Images;
		
		private EntitySet<UserLessonProgress> _UserLessonProgresses;
		
		private EntitySet<Video> _Videos;
		
		private EntitySet<Vocabulary> _Vocabularies;
		
		private EntityRef<LessonType> _LessonType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLessonIdChanging(int value);
    partial void OnLessonIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Lesson()
		{
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._UserLessonProgresses = new EntitySet<UserLessonProgress>(new Action<UserLessonProgress>(this.attach_UserLessonProgresses), new Action<UserLessonProgress>(this.detach_UserLessonProgresses));
			this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
			this._Vocabularies = new EntitySet<Vocabulary>(new Action<Vocabulary>(this.attach_Vocabularies), new Action<Vocabulary>(this.detach_Vocabularies));
			this._LessonType = default(EntityRef<LessonType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LessonId
		{
			get
			{
				return this._LessonId;
			}
			set
			{
				if ((this._LessonId != value))
				{
					this.OnLessonIdChanging(value);
					this.SendPropertyChanging();
					this._LessonId = value;
					this.SendPropertyChanged("LessonId");
					this.OnLessonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._LessonType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Image", Storage="_Images", ThisKey="LessonId", OtherKey="LessonId")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_UserLessonProgress", Storage="_UserLessonProgresses", ThisKey="LessonId", OtherKey="LessonId")]
		public EntitySet<UserLessonProgress> UserLessonProgresses
		{
			get
			{
				return this._UserLessonProgresses;
			}
			set
			{
				this._UserLessonProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Video", Storage="_Videos", ThisKey="LessonId", OtherKey="LessonId")]
		public EntitySet<Video> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Vocabulary", Storage="_Vocabularies", ThisKey="LessonId", OtherKey="LessonId")]
		public EntitySet<Vocabulary> Vocabularies
		{
			get
			{
				return this._Vocabularies;
			}
			set
			{
				this._Vocabularies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LessonType_Lesson", Storage="_LessonType", ThisKey="TypeId", OtherKey="TypeId", IsForeignKey=true)]
		public LessonType LessonType
		{
			get
			{
				return this._LessonType.Entity;
			}
			set
			{
				LessonType previousValue = this._LessonType.Entity;
				if (((previousValue != value) 
							|| (this._LessonType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LessonType.Entity = null;
						previousValue.Lessons.Remove(this);
					}
					this._LessonType.Entity = value;
					if ((value != null))
					{
						value.Lessons.Add(this);
						this._TypeId = value.TypeId;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("LessonType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = null;
		}
		
		private void attach_UserLessonProgresses(UserLessonProgress entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = this;
		}
		
		private void detach_UserLessonProgresses(UserLessonProgress entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = null;
		}
		
		private void attach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = this;
		}
		
		private void detach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = null;
		}
		
		private void attach_Vocabularies(Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = this;
		}
		
		private void detach_Vocabularies(Vocabulary entity)
		{
			this.SendPropertyChanging();
			entity.Lesson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LessonType")]
	public partial class LessonType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeId;
		
		private string _TypeName;
		
		private EntitySet<Lesson> _Lessons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public LessonType()
		{
			this._Lessons = new EntitySet<Lesson>(new Action<Lesson>(this.attach_Lessons), new Action<Lesson>(this.detach_Lessons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LessonType_Lesson", Storage="_Lessons", ThisKey="TypeId", OtherKey="TypeId")]
		public EntitySet<Lesson> Lessons
		{
			get
			{
				return this._Lessons;
			}
			set
			{
				this._Lessons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lessons(Lesson entity)
		{
			this.SendPropertyChanging();
			entity.LessonType = this;
		}
		
		private void detach_Lessons(Lesson entity)
		{
			this.SendPropertyChanging();
			entity.LessonType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLessonProgress")]
	public partial class UserLessonProgress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProgressId;
		
		private int _UserId;
		
		private int _LessonId;
		
		private bool _IsCompleted;
		
		private System.DateTime _LastAccessed;
		
		private System.Nullable<decimal> _CompletionPercentage;
		
		private EntityRef<Lesson> _Lesson;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgressIdChanging(int value);
    partial void OnProgressIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLessonIdChanging(int value);
    partial void OnLessonIdChanged();
    partial void OnIsCompletedChanging(bool value);
    partial void OnIsCompletedChanged();
    partial void OnLastAccessedChanging(System.DateTime value);
    partial void OnLastAccessedChanged();
    partial void OnCompletionPercentageChanging(System.Nullable<decimal> value);
    partial void OnCompletionPercentageChanged();
    #endregion
		
		public UserLessonProgress()
		{
			this._Lesson = default(EntityRef<Lesson>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgressId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProgressId
		{
			get
			{
				return this._ProgressId;
			}
			set
			{
				if ((this._ProgressId != value))
				{
					this.OnProgressIdChanging(value);
					this.SendPropertyChanging();
					this._ProgressId = value;
					this.SendPropertyChanged("ProgressId");
					this.OnProgressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonId", DbType="Int NOT NULL")]
		public int LessonId
		{
			get
			{
				return this._LessonId;
			}
			set
			{
				if ((this._LessonId != value))
				{
					if (this._Lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLessonIdChanging(value);
					this.SendPropertyChanging();
					this._LessonId = value;
					this.SendPropertyChanged("LessonId");
					this.OnLessonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit NOT NULL")]
		public bool IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessed", DbType="DateTime NOT NULL")]
		public System.DateTime LastAccessed
		{
			get
			{
				return this._LastAccessed;
			}
			set
			{
				if ((this._LastAccessed != value))
				{
					this.OnLastAccessedChanging(value);
					this.SendPropertyChanging();
					this._LastAccessed = value;
					this.SendPropertyChanged("LastAccessed");
					this.OnLastAccessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionPercentage", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> CompletionPercentage
		{
			get
			{
				return this._CompletionPercentage;
			}
			set
			{
				if ((this._CompletionPercentage != value))
				{
					this.OnCompletionPercentageChanging(value);
					this.SendPropertyChanging();
					this._CompletionPercentage = value;
					this.SendPropertyChanged("CompletionPercentage");
					this.OnCompletionPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_UserLessonProgress", Storage="_Lesson", ThisKey="LessonId", OtherKey="LessonId", IsForeignKey=true)]
		public Lesson Lesson
		{
			get
			{
				return this._Lesson.Entity;
			}
			set
			{
				Lesson previousValue = this._Lesson.Entity;
				if (((previousValue != value) 
							|| (this._Lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lesson.Entity = null;
						previousValue.UserLessonProgresses.Remove(this);
					}
					this._Lesson.Entity = value;
					if ((value != null))
					{
						value.UserLessonProgresses.Add(this);
						this._LessonId = value.LessonId;
					}
					else
					{
						this._LessonId = default(int);
					}
					this.SendPropertyChanged("Lesson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLessonProgress", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserLessonProgresses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserLessonProgresses.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _FullName;
		
		private string _Email;
		
		private string _PasswordHash;
		
		private EntitySet<Image> _Images;
		
		private EntitySet<UserLessonProgress> _UserLessonProgresses;
		
		private EntitySet<UserVocabularyHistory> _UserVocabularyHistories;
		
		private EntitySet<Video> _Videos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    #endregion
		
		public User()
		{
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._UserLessonProgresses = new EntitySet<UserLessonProgress>(new Action<UserLessonProgress>(this.attach_UserLessonProgresses), new Action<UserLessonProgress>(this.detach_UserLessonProgresses));
			this._UserVocabularyHistories = new EntitySet<UserVocabularyHistory>(new Action<UserVocabularyHistory>(this.attach_UserVocabularyHistories), new Action<UserVocabularyHistory>(this.detach_UserVocabularyHistories));
			this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Image", Storage="_Images", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserLessonProgress", Storage="_UserLessonProgresses", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserLessonProgress> UserLessonProgresses
		{
			get
			{
				return this._UserLessonProgresses;
			}
			set
			{
				this._UserLessonProgresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserVocabularyHistory", Storage="_UserVocabularyHistories", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserVocabularyHistory> UserVocabularyHistories
		{
			get
			{
				return this._UserVocabularyHistories;
			}
			set
			{
				this._UserVocabularyHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Video", Storage="_Videos", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Video> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserLessonProgresses(UserLessonProgress entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserLessonProgresses(UserLessonProgress entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserVocabularyHistories(UserVocabularyHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserVocabularyHistories(UserVocabularyHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserVocabularyHistory")]
	public partial class UserVocabularyHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HistoryId;
		
		private int _UserId;
		
		private int _WordId;
		
		private System.DateTime _LastReviewed;
		
		private int _Score;
		
		private int _TimesReviewed;
		
		private EntityRef<User> _User;
		
		private EntityRef<Vocabulary> _Vocabulary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHistoryIdChanging(int value);
    partial void OnHistoryIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnWordIdChanging(int value);
    partial void OnWordIdChanged();
    partial void OnLastReviewedChanging(System.DateTime value);
    partial void OnLastReviewedChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnTimesReviewedChanging(int value);
    partial void OnTimesReviewedChanged();
    #endregion
		
		public UserVocabularyHistory()
		{
			this._User = default(EntityRef<User>);
			this._Vocabulary = default(EntityRef<Vocabulary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HistoryId
		{
			get
			{
				return this._HistoryId;
			}
			set
			{
				if ((this._HistoryId != value))
				{
					this.OnHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._HistoryId = value;
					this.SendPropertyChanged("HistoryId");
					this.OnHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordId", DbType="Int NOT NULL")]
		public int WordId
		{
			get
			{
				return this._WordId;
			}
			set
			{
				if ((this._WordId != value))
				{
					if (this._Vocabulary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWordIdChanging(value);
					this.SendPropertyChanging();
					this._WordId = value;
					this.SendPropertyChanged("WordId");
					this.OnWordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReviewed", DbType="DateTime NOT NULL")]
		public System.DateTime LastReviewed
		{
			get
			{
				return this._LastReviewed;
			}
			set
			{
				if ((this._LastReviewed != value))
				{
					this.OnLastReviewedChanging(value);
					this.SendPropertyChanging();
					this._LastReviewed = value;
					this.SendPropertyChanged("LastReviewed");
					this.OnLastReviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int NOT NULL")]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesReviewed", DbType="Int NOT NULL")]
		public int TimesReviewed
		{
			get
			{
				return this._TimesReviewed;
			}
			set
			{
				if ((this._TimesReviewed != value))
				{
					this.OnTimesReviewedChanging(value);
					this.SendPropertyChanging();
					this._TimesReviewed = value;
					this.SendPropertyChanged("TimesReviewed");
					this.OnTimesReviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserVocabularyHistory", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserVocabularyHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserVocabularyHistories.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vocabulary_UserVocabularyHistory", Storage="_Vocabulary", ThisKey="WordId", OtherKey="WordId", IsForeignKey=true)]
		public Vocabulary Vocabulary
		{
			get
			{
				return this._Vocabulary.Entity;
			}
			set
			{
				Vocabulary previousValue = this._Vocabulary.Entity;
				if (((previousValue != value) 
							|| (this._Vocabulary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vocabulary.Entity = null;
						previousValue.UserVocabularyHistories.Remove(this);
					}
					this._Vocabulary.Entity = value;
					if ((value != null))
					{
						value.UserVocabularyHistories.Add(this);
						this._WordId = value.WordId;
					}
					else
					{
						this._WordId = default(int);
					}
					this.SendPropertyChanged("Vocabulary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Video")]
	public partial class Video : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VideoId;
		
		private string _FileName;
		
		private string _FilePath;
		
		private System.DateTime _UploadDate;
		
		private int _UserId;
		
		private System.Nullable<int> _LessonId;
		
		private System.Nullable<int> _WordId;
		
		private EntityRef<Lesson> _Lesson;
		
		private EntityRef<User> _User;
		
		private EntityRef<Vocabulary> _Vocabulary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoIdChanging(int value);
    partial void OnVideoIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnUploadDateChanging(System.DateTime value);
    partial void OnUploadDateChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLessonIdChanging(System.Nullable<int> value);
    partial void OnLessonIdChanged();
    partial void OnWordIdChanging(System.Nullable<int> value);
    partial void OnWordIdChanged();
    #endregion
		
		public Video()
		{
			this._Lesson = default(EntityRef<Lesson>);
			this._User = default(EntityRef<User>);
			this._Vocabulary = default(EntityRef<Vocabulary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime NOT NULL")]
		public System.DateTime UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonId", DbType="Int")]
		public System.Nullable<int> LessonId
		{
			get
			{
				return this._LessonId;
			}
			set
			{
				if ((this._LessonId != value))
				{
					if (this._Lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLessonIdChanging(value);
					this.SendPropertyChanging();
					this._LessonId = value;
					this.SendPropertyChanged("LessonId");
					this.OnLessonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordId", DbType="Int")]
		public System.Nullable<int> WordId
		{
			get
			{
				return this._WordId;
			}
			set
			{
				if ((this._WordId != value))
				{
					if (this._Vocabulary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWordIdChanging(value);
					this.SendPropertyChanging();
					this._WordId = value;
					this.SendPropertyChanged("WordId");
					this.OnWordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Video", Storage="_Lesson", ThisKey="LessonId", OtherKey="LessonId", IsForeignKey=true)]
		public Lesson Lesson
		{
			get
			{
				return this._Lesson.Entity;
			}
			set
			{
				Lesson previousValue = this._Lesson.Entity;
				if (((previousValue != value) 
							|| (this._Lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lesson.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._Lesson.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._LessonId = value.LessonId;
					}
					else
					{
						this._LessonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lesson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Video", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vocabulary_Video", Storage="_Vocabulary", ThisKey="WordId", OtherKey="WordId", IsForeignKey=true)]
		public Vocabulary Vocabulary
		{
			get
			{
				return this._Vocabulary.Entity;
			}
			set
			{
				Vocabulary previousValue = this._Vocabulary.Entity;
				if (((previousValue != value) 
							|| (this._Vocabulary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vocabulary.Entity = null;
						previousValue.Videos.Remove(this);
					}
					this._Vocabulary.Entity = value;
					if ((value != null))
					{
						value.Videos.Add(this);
						this._WordId = value.WordId;
					}
					else
					{
						this._WordId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vocabulary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vocabulary")]
	public partial class Vocabulary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WordId;
		
		private int _LessonId;
		
		private string _Word;
		
		private string _Definition;
		
		private string _Example;
		
		private string _PronunciationUrl;
		
		private EntitySet<Image> _Images;
		
		private EntitySet<UserVocabularyHistory> _UserVocabularyHistories;
		
		private EntitySet<Video> _Videos;
		
		private EntityRef<Lesson> _Lesson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWordIdChanging(int value);
    partial void OnWordIdChanged();
    partial void OnLessonIdChanging(int value);
    partial void OnLessonIdChanged();
    partial void OnWordChanging(string value);
    partial void OnWordChanged();
    partial void OnDefinitionChanging(string value);
    partial void OnDefinitionChanged();
    partial void OnExampleChanging(string value);
    partial void OnExampleChanged();
    partial void OnPronunciationUrlChanging(string value);
    partial void OnPronunciationUrlChanged();
    #endregion
		
		public Vocabulary()
		{
			this._Images = new EntitySet<Image>(new Action<Image>(this.attach_Images), new Action<Image>(this.detach_Images));
			this._UserVocabularyHistories = new EntitySet<UserVocabularyHistory>(new Action<UserVocabularyHistory>(this.attach_UserVocabularyHistories), new Action<UserVocabularyHistory>(this.detach_UserVocabularyHistories));
			this._Videos = new EntitySet<Video>(new Action<Video>(this.attach_Videos), new Action<Video>(this.detach_Videos));
			this._Lesson = default(EntityRef<Lesson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WordId
		{
			get
			{
				return this._WordId;
			}
			set
			{
				if ((this._WordId != value))
				{
					this.OnWordIdChanging(value);
					this.SendPropertyChanging();
					this._WordId = value;
					this.SendPropertyChanged("WordId");
					this.OnWordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonId", DbType="Int NOT NULL")]
		public int LessonId
		{
			get
			{
				return this._LessonId;
			}
			set
			{
				if ((this._LessonId != value))
				{
					if (this._Lesson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLessonIdChanging(value);
					this.SendPropertyChanging();
					this._LessonId = value;
					this.SendPropertyChanged("LessonId");
					this.OnLessonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this.OnWordChanging(value);
					this.SendPropertyChanging();
					this._Word = value;
					this.SendPropertyChanged("Word");
					this.OnWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="NVarChar(MAX)")]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this.OnDefinitionChanging(value);
					this.SendPropertyChanging();
					this._Definition = value;
					this.SendPropertyChanged("Definition");
					this.OnDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Example", DbType="NVarChar(MAX)")]
		public string Example
		{
			get
			{
				return this._Example;
			}
			set
			{
				if ((this._Example != value))
				{
					this.OnExampleChanging(value);
					this.SendPropertyChanging();
					this._Example = value;
					this.SendPropertyChanged("Example");
					this.OnExampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PronunciationUrl", DbType="NVarChar(500)")]
		public string PronunciationUrl
		{
			get
			{
				return this._PronunciationUrl;
			}
			set
			{
				if ((this._PronunciationUrl != value))
				{
					this.OnPronunciationUrlChanging(value);
					this.SendPropertyChanging();
					this._PronunciationUrl = value;
					this.SendPropertyChanged("PronunciationUrl");
					this.OnPronunciationUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vocabulary_Image", Storage="_Images", ThisKey="WordId", OtherKey="WordId")]
		public EntitySet<Image> Images
		{
			get
			{
				return this._Images;
			}
			set
			{
				this._Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vocabulary_UserVocabularyHistory", Storage="_UserVocabularyHistories", ThisKey="WordId", OtherKey="WordId")]
		public EntitySet<UserVocabularyHistory> UserVocabularyHistories
		{
			get
			{
				return this._UserVocabularyHistories;
			}
			set
			{
				this._UserVocabularyHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vocabulary_Video", Storage="_Videos", ThisKey="WordId", OtherKey="WordId")]
		public EntitySet<Video> Videos
		{
			get
			{
				return this._Videos;
			}
			set
			{
				this._Videos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lesson_Vocabulary", Storage="_Lesson", ThisKey="LessonId", OtherKey="LessonId", IsForeignKey=true)]
		public Lesson Lesson
		{
			get
			{
				return this._Lesson.Entity;
			}
			set
			{
				Lesson previousValue = this._Lesson.Entity;
				if (((previousValue != value) 
							|| (this._Lesson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lesson.Entity = null;
						previousValue.Vocabularies.Remove(this);
					}
					this._Lesson.Entity = value;
					if ((value != null))
					{
						value.Vocabularies.Add(this);
						this._LessonId = value.LessonId;
					}
					else
					{
						this._LessonId = default(int);
					}
					this.SendPropertyChanged("Lesson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Vocabulary = this;
		}
		
		private void detach_Images(Image entity)
		{
			this.SendPropertyChanging();
			entity.Vocabulary = null;
		}
		
		private void attach_UserVocabularyHistories(UserVocabularyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Vocabulary = this;
		}
		
		private void detach_UserVocabularyHistories(UserVocabularyHistory entity)
		{
			this.SendPropertyChanging();
			entity.Vocabulary = null;
		}
		
		private void attach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Vocabulary = this;
		}
		
		private void detach_Videos(Video entity)
		{
			this.SendPropertyChanging();
			entity.Vocabulary = null;
		}
	}
}
#pragma warning restore 1591
